@using Umbraco.Cms.Web.Common.PublishedModels;
@using UdemyTestSite.ViewModels;
@using Umbraco.Cms.Core.Models.Blocks
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ContentPage>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@{
    Layout = "Main.cshtml";
    
    var contactForm = Model.Value<bool>("conactFormSwitch");
    //var contactForm = new IPublishedElement();

    // var grid = Model.Value<BlockGridModel>("contentGrid");
    // foreach (var item in grid)
    // {
    //     var h = item.Content.ContentType.Alias;
    //     if (String.Equals(h, "colLayout")) {
    //         var contactForm1 = item.Content.Value<bool>("conactFormSwitch"); 
    //     }
    // }

    //var value = contactForm.Value<bool>("contactFormSwitch");
    var heroOverlayColor = Model.Value<string>("heroOverlayColour");
}

@if (!string.IsNullOrEmpty(heroOverlayColor))
{

  <style>
      .home-hero > .overlay {
            background-color: #@heroOverlayColor;
          opacity: 0.5;
          }
      
  </style>
  
}

@await Html.PartialAsync("Hero")

<div class="container mt-4">
    <div class="row">
        <div class="col" >
            <div style ="padding: 1em;">
                <h1>@Model.Name</h1>
                @if (Model.HasValue("pageContent"))
                {
                    @Model.Value("pageContent")
                }
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col">
            @await Html.GetBlockGridHtmlAsync(Model, "contentGrid")
        </div>
    </div>
</div>

<!-- Call to Action -->
<div class="mb-4">
    @await Html.PartialAsync("Call To Action")
</div>


@if (contactForm)
{
  <div class="container">
    <div class="row">
        <div class="col">
          @await Html.PartialAsync("Partials/ContactForm", new ContactFormViewModel())
        </div>
    </div>
  </div>
}




