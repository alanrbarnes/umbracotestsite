@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.NewsArticle>;
@using Umbraco.Cms.Core.Models;
@using Umbraco.Extensions;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;
@using Umbraco.Cms.Core.Media
@using System.Web

@inject IImageUrlGenerator ImageUrlGenerator

@{
    Layout = "Main.cshtml";
    var image = Model.ArticleImage;
    var crops = image?.GetImageCrops()?.Where(c => c.Alias == "Main");
    var crop = crops?.FirstOrDefault(c => c.Alias == "Main");

    var imgCropper = Model.Value<ImageCropperValue>("articleImage");
    var imgUrl = imgCropper?.Src + imgCropper?.GetCrop("main")?.Width;

    var articleUrl = Model.Url(null, UrlMode.Absolute);
    var siteUrl = this.Context.Request.Host.Value; // Model.Request.Url.GetLeftPart(UriPartial.Authority);

    Uri uri = new Uri(articleUrl);
    var sUrl = uri.GetLeftPart(UriPartial.Authority);
    string requested = uri.Scheme + Uri.SchemeDelimiter + uri.Host + ":" + uri.Port;

    //related articles
    var relatedArticles = Model.Value<IList<IPublishedContent>>("articleRelatedContent");
}

@section head
{
    <meta property="og:title" content="@Model.Name" />
    <meta property="og:description" content="Model.LeadIn" />
    <meta property="og:type" content="article" />
    <meta property="og:image" content="@sUrl@Model.ArticleImage" />
}

<article>
    <header class="container text-center">
        <div class="row">
            <div class="col">
                <h1 class="title-2 mt-5">@Model.Name</h1>
                <div class="meta mb-5">
                    <ul class="list-unstyled list-inline">
                        <li class="list-inline-item">
                            <i class="fa fa-user"></i> By @Model.Author
                        </li>
                        <li class="list-inline-item">
                            <i class="fa fa-calendar"></i>
                            @Model.PostDate.ToString("MM-dd-yyyy HH:mm");
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <p class="lead-in">
                    @Model.LeadIn
                </p>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @if (Model.ArticleImage is not null)
                {
                    <img class="d-block mx-auto" src="@Url.GetCropUrl(Model.ArticleImage,"Main")" width="@crop?.Width;" height="@crop?.Height;" />
                }
            </div>
        </div>
        <div class="row mt-5 mb-5">
            <div class="col">
                @Model.NewsArticleContent;
            </div>
        </div>
    </header>
    <footer class="border d-flex flex-column flex-md-row justify-content-between mt-5 mb-5">
        <div class="d-flex align-item-center px-4">
            <div class="d-flex flex-column">
                <div class="d-flex"><span>Author: <strong>@Model.Author</strong></span></div>
                <div class="d-flex"><span>Categories: @string.Join(",", Model.NewsCategories)</span></div>
            </div>
        </div>
        <div class="d-flex align-item-center px-4">
            <span>Share this article</span>
            <div class="btn--socialsquare btn btn-outline-primary m-2">
                <a class="ml2 mr2" href="@articleUrl"><i class="fa fa-twitter"></i></a>
            </div>
            <div class="btn--socialsquare btn btn-outline-primary m-2">
                <a class="ml2 mr2" href="@articleUrl"><i class="fa fa-linkedin"></i></a>
            </div>
            <div class="btn--socialsquare btn btn-outline-primary m-2">
                <a class="ml2 mr2" href="@articleUrl"><i class="fa fa-facebook"></i></a>
            </div>
        </div>
    </footer>
</article>

<!-- Get Related Articles -->
@if(relatedArticles is not null)
{
    <div class="container">
        <div class="row">
            <div class="col">
                <h2>Related Articles</h2>
                <div class="card-deck">
                    @foreach (var item in relatedArticles)
                    {
                        var relatedImgCropper = item.Value<ImageCropperValue>("articleImage");
                        var thumbUrl = relatedImgCropper.Src + relatedImgCropper.GetCropUrl("Thumb", ImageUrlGenerator);

                        <div class="card" style="width: 18rem;">
                            <img class="card-img-top" src="@thumbUrl" alt="Card image cap">
                            <div class="card-body">
                                <h5 class="card-title">@item.Name</h5>
                                <p class="card-text">@item.Value("leadIn")</p>
                            </div>
                            <div class="card-footer d-flex justify-content-between">
                                <div><a href="@item.Url(null, UrlMode.Absolute)" class="btn btn-primary">Read more</a></div>
                                <div class="social-icons text-muted">
                                    <a class="ml-2 mr-2" href="https://twitter.com/intent/tweet?text=@item.Value("leadIn")&amp;url=@item.Url(null, UrlMode.Absolute)">
                                        <i class="fab fa-twitter"></i>

                                    </a>
                                    <a class="ml-2 mr-2" href="https://facebook.com/sharer.php?u=@item.Url(null, UrlMode.Absolute)">
                                        <i class="fab fa-facebook"></i>
                                    </a>
                                    <a class="ml-2 mr-2" href="https://linkedin.com/shareArticle?mini=true&amp;url=@item.Url(null, UrlMode.Absolute)">
                                        <i class="fab fa-linkedin"></i>
                                    </a>
                                </div>
                            </div>
                        </div>
                    }
               </div>
            </div>
        </div>
    </div>
}









